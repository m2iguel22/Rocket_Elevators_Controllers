One Colunm (Floors 1-10)
Elevators = 2 (Elevator 1, Elevator 2)
Button = Outside and Inside Elevator


PropertyofColunm
  - Number of floor
  - Number of Elevators
  - ElevatorList

PropretyOfElevators

-ElevatorDirection = UP and DOWN
-ElevatorStatus = Idle, Moving, Stoped
-ElevatorDoors = Opened or CLoosed
-ELevatorCurrentFloor = Position of floor

PropertyOfButton
-Button = Light ON 
-Button = Light OFF 
-InsideButton = RequestFloor (Up or Down, CLosed or Openend Door )
-OutsideButton = RequestBestElevator (Up OR Down)

       /// Witch Elevator are Available ///
           - Available = True or False 
           - Full = Return to Availlaible 
           - ElevatorCurrentFloor 
           - ClosestElevator 
           - RequestFloorButton
           = BestElevator
          


         /// FindBestElevator ///
           - Witch Elevator are Available 
           - Available = True or False 
           - Full = Return to Availlaible 
           - ElevatorCurrentFloor 
           - ClosestElevator 
           - RequestFloorButton
           = BestElevator




           
         /// CALL ELEVATOR ///

        SEQUENCE CallElevator (USING RequestFloor AND Drection) 
        
          CALL RequestBestELevator WITH RequestFloor AND Direction
          CALL FindBestElevator WITH RequestFloor AND Direction RETURNING Elevator
          CALL SendRequest WITH Elevator AND RequestFloor AND Direction

        ENDSEQUENCE

        /// BEST ELEVATOR ///
        
        SEQUENCE FindBestElevator (USING RequestFloor, Direction AND Elevator)

          INIT BestElevator = NULL;
          INIT BestGap = 1000

          FOR EACH ELEVATOR IN COLUMN ElevatorList

            INIT CurrentGap = COMPUTE ASOLUTE( RequestFloor - ELEVATOR CurrentFloor)

            IF CurrentGap < BestGap

              IF ElevatorStatus ISEQUAL TO "Moving" AND ElevatorDirection ISEQUAL TO Direction THEN 
                elevator IS bestElevator

              ELSE IF ElevatorStatus ISEQUAL TO "Idle" THEN


              ELSE IF ElevatorStatus ISEQUAL TO "Stoped" THEN

            ENDIF
                  BestGap = CurrentGap
                  BestElevator = Elevator 
            ENDIF 
          ENDFOR

          RETURN BestElevator
        ENDSEQUENCE

        /// Inside Elevator ///

        SEQUENCE RequestFloor (USING RequestFLoor AND Elevator)
          CALL RequestFloor WITH Floor AND Direction RETURNING RequestedFloor
           
        ENDSEQUENCE

           //BUTTON LIGHT ON// 

        SEQUENCE ResquestFloorButtonLight (USING RequestFloorButton AND Direction)
        CALL FindCallButton WIth RequestFloor and Direction RETURNING FLoorRequestButton
        SET CallButton Light On


        SEQUENCE ResquestFloorButtonLight (USING RequestFloorButton AND Direction) 

        
         
           
            
        SEQUENCE ButtonActivate
        SEQUENCE ButtonDesactivate
        SEQUENCE CallButtons
        SEQUENCE IdleStatus
           
        
        
        BestElevator go to RequestFloorButton 
        DoorsOpen and DoorsClose
        RequestFloorButton
        BestElevator go to RequestFloor
        
        
        
        
  
          













































  
SEQUENCE RequestElevatorButton (USING Floor AND Direction)

         CALL ButtonCallActivate (Direction, Floor) 
         CALL FindElevator(Direction, Floor) RETURNING CurrentElevator
         
        SET ElevatorCurrentFloor = CurrentElevator ELevatorCurrentFloor
        
          CALL RequestOperateElevator(USING CurrentElevator and Floor)
              
 END SEQUENCE
 
//FindElevator//
SEQUENCE FindElevator (USING FLoor AND Direction)
 
         CAll  BestElevator = Elevator(Direction AND Floor)
               BestFloorDifference = 10 
        
         FOR   FloorDifference = COMPUTE ABSOLUTE (ElevatorCurrentFloor - Floor)
          IF   FloorDifference < BestFloorDifference
               BestFloorDifference = FloorDifference
        
            
            
      
      
//BUTTONS CALLS//
             

SEQUENCE : ButtonCallACtivate (USING Floor AND Direction)

          CALL FindButton (Direction and FLoor) RETURNING Button
           SET  Button Active
          
 END SEQUENCE 
 
SEQUENCE : ButtonCallDesactivate (USING Direction AND Floor)

          CALL FindButton (Direction and FLoor) RETURNING Button
           SET  Button Inactive
          
 END SEQUENCE         
 
 

        
         







         
         
  
 
   
   
   
 
  


 



